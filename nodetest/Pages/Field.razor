@page "/field"
@using nodetest.Models
@using nodetest.Models.Nodes
@using nodetest.Utils
@using nodetest.ViewModels


<div @ref="_fieldDiv" id="field">
    <CascadingValue Value="ParentOffsetStorage" Name="@nameof(ParentOffsetStorage)">
    <CascadingValue Value="ConnectionsStorage" Name="@nameof(ConnectionsStorage)">
        @foreach (var node in NodeCollectionViewModel.KnownNodes)
        {
            <Node Model="node">
                <InputsTemplate>
                    <span style="color:black;">I</span>
                </InputsTemplate>
                <OutputsTemplate>
                    <span style="color:red">O</span>
                </OutputsTemplate>
            </Node>
        }

        <Connectors/>

    </CascadingValue>
    </CascadingValue>
</div>


@code {


    NodeCollectionViewModel NodeCollectionViewModel;

    public ParentOffsetStorage ParentOffsetStorage = new();

    public ConnectionsStorage ConnectionsStorage = new();

    protected override void OnInitialized()
    {



        var startNode = new NodeViewModel(new StartNode(), "1") { Height = 200, Width = 200 };

        var defnote2 = new NodeViewModel(new DefaultNode(), "2.1") { Height = 200, Width = 200 };
        var defnote = new NodeViewModel(new DefaultNode(), "2.2") { Height = 200, Width = 200 };
        var endNode = new NodeViewModel(new EndNode(), "3") { Height = 250, Width = 250 };

        startNode.Connect(defnote);
        startNode.Connect(defnote2);
        defnote.Connect(endNode);

        NodeCollectionViewModel = new NodeCollectionViewModel(startNode);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        ParentOffsetStorage.ParentOffset = await _fieldDiv.GetOffsetAsync();
        var ts = ConnectionsStorage;
    }

    private ElementReference _fieldDiv;
}